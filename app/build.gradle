apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.wangshen.mycontroctview"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","x86_64"
        }
    }
    signingConfigs {
        releaseConfig
        debugConfig
    }
    loadSigningConfigs()
    buildTypes {
        buildTypes {

            debug {
                versionNameSuffix "-debug"
                minifyEnabled false
                zipAlignEnabled false
                shrinkResources false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.releaseConfig
            }

            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                zipAlignEnabled false
                shrinkResources false
                signingConfig signingConfigs.releaseConfig
            }
        }
    }
    packagingOptions {
        exclude 'assets/ap1.data'
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.youth.banner:banner:1.4.10'
//Glide框架
    implementation "com.github.bumptech.glide:glide:4.6.1"

    compile 'com.amap.api:3dmap:latest.integration'


    compile 'com.amap.api:search:latest.integration'

    compile 'com.amap.api:location:latest.integration'
}
def loadSigningConfigs() {
    def Properties props = new Properties()
    def propFile = file('../signing.properties')
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
                props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
            android.signingConfigs.releaseConfig.storeFile = file(props['RELEASE_STORE_FILE'])
            android.signingConfigs.releaseConfig.storePassword = props['RELEASE_STORE_PASSWORD']
            android.signingConfigs.releaseConfig.keyAlias = props['RELEASE_KEY_ALIAS']
            android.signingConfigs.releaseConfig.keyPassword = props['RELEASE_KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }
}